



overhead at runtime (jiting) >>what is done to reduce



### **تقليل التأخير الناتج عن JIT في .NET:**

1. **التجميع المسبق (AOT):**
   - **ما هو:** تجميع الكود إلى تعليمات آلة قبل وقت التشغيل بدلاً من تجميعه أثناء التشغيل.
   - **الفائدة:** يقلل من التأخير الناتج عن التجميع أثناء التشغيل.

2. **التحسين الموجه حسب الأداء (PGO):**
   - **ما هو:** جمع بيانات عن أداء البرنامج أثناء التشغيل لتحسين الكود.
   - **الفائدة:** تحسين التجميع ليصبح أكثر كفاءة وبالتالي تقليل التأخير.

3. **التجميع المبدئي (Tiered Compilation):**
   - **ما هو:** التجميع الأولي للكود بسرعة، ثم تحسينه بشكل تدريجي.
   - **الفائدة:** تحسين وقت بدء التطبيق مع الحفاظ على الأداء في المدى الطويل.

4. **تخزين الكود المجمّع:**  
   - **ما هو:** تخزين الكود الذي تم تجميعه لتجنب إعادة تجميعه في التشغيل التالي.
   - **الفائدة:** تحسين أداء التطبيقات عبر إعادة استخدام الكود المجمّع مسبقًا.

5. **التقليص (Trimming):**
   - **ما هو:** إزالة الكود غير المستخدم لتقليل حجم التطبيق.
   - **الفائدة:** تقليل كمية الكود التي يحتاج JIT إلى تجميعها، مما يؤدي إلى تحسين الأداء.

بتطبيق هذه التقنيات، يتم تقليل التأخير الناتج عن JIT وتحسين أداء التطبيقات في .NET.


















 hello world using VS code

using System;

class Program
{
    static void Main(string[] args)
    {
        Console.WriteLine("Hello, World!");
    }
}
